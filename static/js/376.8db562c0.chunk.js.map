{"version":3,"file":"static/js/376.8db562c0.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","components/MovieItem/MovieItem.styled.js","components/MovieItem/MovieItem.jsx","components/MovieSlider/MovieSlider.jsx","pages/Reviews/Reviews.styled.js","pages/Reviews/Reviews.jsx","services/api.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledList = styled.ul`\n  list-style-type: none;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  justify-content: center;\n`;\n","import { MovieItem } from '../index';\nimport { StyledList } from './MovieList.styled';\nimport PropTypes from 'prop-types';\n\nexport const MovieList = ({ movies }) => {\n  return (\n    <StyledList>\n      {movies.map(movie => (\n        <MovieItem key={movie.id} movie={movie} />\n      ))}\n    </StyledList>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }).isRequired\n  ),\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MoviePoster = styled.img`\n  border-radius: 4px;\n  width: 300px;\n  height: 400px;\n  object-fit: cover;\n`;\n\nexport const MovieTitle = styled.p`\n  color: darkblue;\n  margin: 10;\n  font-size: large;\n  font-weight: 700;\n  max-width: 300px;\n`;\n\nexport const MovieCard = styled.li`\n  display: flex;\n  margin: 10px 20px;\n`;\n\nexport const LinkToMovie = styled(Link)`\n  text-decoration: none;\n`;\n","import { useLocation } from 'react-router-dom';\nimport { MoviePoster, MovieCard, MovieTitle } from './MovieItem.styled';\nimport noPoster from 'images/no-poster-available.jpg';\nimport { LinkToMovie } from './MovieItem.styled';\nimport PropTypes from 'prop-types';\n\nexport const MovieItem = ({ movie }) => {\n  const { pathname, search } = useLocation();\n\n  const { title, poster_path, id } = movie;\n  return (\n    <MovieCard>\n      <LinkToMovie to={`/movies/${id}`} state={{ from: pathname + search }}>\n        {poster_path ? (\n          <MoviePoster\n            src={`http://image.tmdb.org/t/p/w200${poster_path}`}\n            alt={title}\n          />\n        ) : (\n          <MoviePoster src={noPoster} alt=\"Placeholder\" />\n        )}\n\n        <MovieTitle>{title}</MovieTitle>\n      </LinkToMovie>\n    </MovieCard>\n  );\n};\n\nMovieItem.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    poster_path: PropTypes.string,\n  }).isRequired,\n};\n","import Slider from 'react-slick';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport { MovieItem } from '../index';\nimport PropTypes from 'prop-types';\n\nexport const MovieSlider = ({ movies }) => {\n  const settings = {\n    dots: true,\n    arrows: false,\n    infinite: true,\n    speed: 500,\n    //slidesToShow: 8,\n    slidesToScroll: 4,\n    variableWidth: true,\n    // prevArrow: <button>Prev</button>,\n    // nextArrow: <button>Next</button>,\n  };\n\n  return (\n    <div>\n      <Slider {...settings}>\n        {movies.map(movie => (\n          <MovieItem movie={movie} key={movie.id} />\n        ))}\n      </Slider>\n    </div>\n  );\n};\n\nMovieSlider.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }).isRequired\n  ),\n};\n","import styled from 'styled-components';\n\nexport const UserAvatar = styled.img`\n  width: 100px;\n  height: 100px;\n  margin-bottom: 20px;\n  object-fit: cover;\n`;\n\nexport const ReviewsList = styled.ul`\n  list-style-type: none;\n  padding: 30px;\n  font-size: 16px;\n  /* display: flex; */\n`;\n\nexport const ReviewsListItem = styled.li`\n  background-color: #fff;\n  margin-bottom: 30px;\n  padding: 20px;\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row;\n  align-content: center;\n`;\n\nexport const UserInfoWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nexport const UserInfo = styled.p`\n  margin: 4px 0;\n`;\n\nexport const UserReview = styled.p`\n  padding-left: 25px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'services/api';\nimport { Loader } from 'components';\nimport avatarPlaceholder from 'images/avatar_placeholder.jpg';\n\nimport {\n  ReviewsList,\n  ReviewsListItem,\n  UserInfoWrapper,\n  UserInfo,\n  UserReview,\n  UserAvatar,\n} from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    getMovieReviews(movieId)\n      .then(movieData => {\n        setReviews(movieData);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, [movieId]);\n\n  if (isLoading) {\n    return <Loader />;\n  }\n\n  return (\n    <div>\n      {reviews.length > 0 ? (\n        <ReviewsList>\n          {reviews.map(({ author, author_details, id, content }) => (\n            <ReviewsListItem key={id}>\n              <UserInfoWrapper>\n                <UserAvatar\n                  src={author_details['avatar_path'] || avatarPlaceholder}\n                  alt={\n                    author_details['avatar_path']\n                      ? \"{author}'s avatar\"\n                      : 'Placeholder'\n                  }\n                />\n                <UserInfo>@{author_details['username']}</UserInfo>\n                <UserInfo>{author}</UserInfo>\n              </UserInfoWrapper>\n              <UserReview>{content}</UserReview>\n            </ReviewsListItem>\n          ))}\n        </ReviewsList>\n      ) : (\n        <p>Reviews for this movie don't exist!</p>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzNjZmMjc2MjcyMDY2NzE4Y2YyYjBhNzI4MjFlYmEwNyIsInN1YiI6IjY0YmFlZTFhNDM1MDExMDBjNzExMGNmYSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.MZ8vGlAMFv2BTCJshD8dcZDS5gvT7sILLLCriDcF-Uc';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst API_PATHS = {\n  trendingMovies: 'trending/movie/day',\n  searchMovie: 'search/movie',\n  movieDetails: 'movie',\n  movieCast: 'credits',\n  movieReviews: 'reviews',\n};\n\nexport const fetchData = async path => {\n  try {\n    const response = await axios.get(`${BASE_URL}` + path, {\n      headers: {\n        accept: 'application/json',\n        Authorization: 'Bearer ' + API_KEY,\n      },\n    });\n    if (response.status === 200) {\n      return response.data;\n    }\n  } catch (error) {\n    console.error('An error occurred while fetching data:', error);\n  }\n};\n\nexport const getTrendingMovies = async () => {\n  const movies = await fetchData(`${API_PATHS.trendingMovies}`);\n  return movies.results;\n};\n\nexport const getMoviesByQuery = async query => {\n  const movies = await fetchData(`${API_PATHS.searchMovie}?query=${query}`);\n  return movies.results;\n};\n\nexport const getMovieDetails = async movieId => {\n  const movie = await fetchData(`${API_PATHS.movieDetails}/${movieId}`);\n\n  if (movie.poster_path) {\n    movie.poster_path = `http://image.tmdb.org/t/p/w300${movie.poster_path}`;\n  }\n\n  return movie;\n};\n\nexport const getMovieCast = async movieId => {\n  const cast = await fetchData(\n    `${API_PATHS.movieDetails}/${movieId}/${API_PATHS.movieCast}`\n  );\n\n  return cast.cast.map(cast => {\n    if (cast.profile_path) {\n      cast.profile_path = `http://image.tmdb.org/t/p/w200${cast.profile_path}`;\n    }\n\n    return cast;\n  });\n};\n\nexport const getMovieReviews = async movieId => {\n  const reviews = await fetchData(\n    `${API_PATHS.movieDetails}/${movieId}/${API_PATHS.movieReviews}`\n  );\n\n  return reviews.results.map(review => {\n    if (review.author_details.avatar_path) {\n      review.author_details.avatar_path = `http://image.tmdb.org/t/p/w200${review.author_details.avatar_path}`;\n    }\n    return review;\n  });\n};\n"],"names":["StyledList","styled","_templateObject","_taggedTemplateLiteral","MovieList","_ref","movies","_jsx","children","map","movie","MovieItem","id","MoviePoster","MovieTitle","_templateObject2","MovieCard","_templateObject3","LinkToMovie","Link","_templateObject4","_useLocation","useLocation","pathname","search","title","poster_path","_jsxs","to","concat","state","from","src","alt","noPoster","MovieSlider","Slider","_objectSpread","dots","arrows","infinite","speed","slidesToScroll","variableWidth","UserAvatar","ReviewsList","ReviewsListItem","UserInfoWrapper","UserInfo","_templateObject5","UserReview","_templateObject6","movieId","useParams","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","_useState3","_useState4","isLoading","setIsLoading","useEffect","getMovieReviews","then","movieData","finally","Loader","length","author","author_details","content","avatarPlaceholder","axios","API_PATHS","fetchData","_asyncToGenerator","_regeneratorRuntime","_callee","path","response","_context","prev","next","headers","accept","Authorization","sent","status","abrupt","data","t0","console","error","stop","_x","apply","arguments","getTrendingMovies","_ref2","_callee2","_context2","results","getMoviesByQuery","_ref3","_callee3","query","_context3","_x2","getMovieDetails","_ref4","_callee4","_context4","_x3","getMovieCast","_ref5","_callee5","cast","_context5","profile_path","_x4","_ref6","_callee6","_context6","review","avatar_path","_x5"],"sourceRoot":""}