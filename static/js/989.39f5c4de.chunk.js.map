{"version":3,"file":"static/js/989.39f5c4de.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","components/MovieItem/MovieItem.styled.js","components/MovieItem/MovieItem.jsx","components/MovieSlider/MovieSlider.jsx","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","services/api.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledList = styled.ul`\n  list-style-type: none;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  justify-content: center;\n`;\n","import { MovieItem } from '../index';\nimport { StyledList } from './MovieList.styled';\nimport PropTypes from 'prop-types';\n\nexport const MovieList = ({ movies }) => {\n  return (\n    <StyledList>\n      {movies.map(movie => (\n        <MovieItem key={movie.id} movie={movie} />\n      ))}\n    </StyledList>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }).isRequired\n  ),\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MoviePoster = styled.img`\n  border-radius: 4px;\n  width: 300px;\n  height: 400px;\n  object-fit: cover;\n`;\n\nexport const MovieTitle = styled.p`\n  color: darkblue;\n  margin: 10;\n  font-size: large;\n  font-weight: 700;\n  max-width: 300px;\n`;\n\nexport const MovieCard = styled.li`\n  display: flex;\n  margin: 10px 20px;\n`;\n\nexport const LinkToMovie = styled(Link)`\n  text-decoration: none;\n`;\n","import { useLocation } from 'react-router-dom';\nimport { MoviePoster, MovieCard, MovieTitle } from './MovieItem.styled';\nimport noPoster from 'images/no-poster-available.jpg';\nimport { LinkToMovie } from './MovieItem.styled';\nimport PropTypes from 'prop-types';\n\nexport const MovieItem = ({ movie }) => {\n  const { pathname, search } = useLocation();\n\n  const { title, poster_path, id } = movie;\n  return (\n    <MovieCard>\n      <LinkToMovie to={`/movies/${id}`} state={{ from: pathname + search }}>\n        {poster_path ? (\n          <MoviePoster\n            src={`http://image.tmdb.org/t/p/w200${poster_path}`}\n            alt={title}\n          />\n        ) : (\n          <MoviePoster src={noPoster} alt=\"Placeholder\" />\n        )}\n\n        <MovieTitle>{title}</MovieTitle>\n      </LinkToMovie>\n    </MovieCard>\n  );\n};\n\nMovieItem.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    poster_path: PropTypes.string,\n  }).isRequired,\n};\n","import Slider from 'react-slick';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport { MovieItem } from '../index';\nimport PropTypes from 'prop-types';\n\nexport const MovieSlider = ({ movies }) => {\n  const settings = {\n    dots: true,\n    arrows: false,\n    infinite: true,\n    speed: 500,\n    //slidesToShow: 8,\n    slidesToScroll: 4,\n    variableWidth: true,\n    // prevArrow: <button>Prev</button>,\n    // nextArrow: <button>Next</button>,\n  };\n\n  return (\n    <div>\n      <Slider {...settings}>\n        {movies.map(movie => (\n          <MovieItem movie={movie} key={movie.id} />\n        ))}\n      </Slider>\n    </div>\n  );\n};\n\nMovieSlider.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }).isRequired\n  ),\n};\n","import styled from 'styled-components';\n\nimport { NavLink, Link } from 'react-router-dom';\n\nexport const MovieCardWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 30px;\n  margin-bottom: 10px;\n`;\n\nexport const MovieCardBox = styled.div`\n  padding: 15px;\n`;\n\nexport const MoviePoster = styled.img`\n  border-radius: 4px;\n`;\n\nexport const MovieInfo = styled.span`\n  margin-right: 20px;\n  color: darkblue;\n  font-weight: 600;\n`;\n\nexport const MovieBox = styled.div`\n  margin-bottom: 10px;\n`;\n\nexport const MovieOverview = styled.h3`\n  margin: 40px 0 10px;\n`;\n\nexport const MovieOverviewText = styled.p`\n  width: 33%;\n`;\n\nexport const MovieNav = styled.ul`\n  list-style-type: none;\n  display: flex;\n  margin: 0;\n  padding: 0;\n`;\n\nexport const MovieNavItem = styled.li`\n  padding: 10px;\n`;\n\nexport const MovieNavLink = styled(NavLink)`\n  color: darkblue;\n  text-decoration: none;\n  font-size: 18px;\n  font-weight: bold;\n  padding: 8px;\n\n  &.active {\n    border: 1px solid darkblue;\n    border-radius: 6px;\n  }\n`;\n\nexport const BackLink = styled(Link)`\n  text-decoration: none;\n  color: darkblue;\n  margin-bottom: 25px;\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  font-weight: 500;\n`;\n","import { useState, useEffect, useRef, Suspense } from 'react';\nimport { useParams, useLocation, Outlet } from 'react-router-dom';\n\nimport { getMovieDetails } from 'services/api';\nimport { HiArrowLeft } from 'react-icons/hi';\nimport { Loader } from 'components';\nimport noPoster from 'images/no-poster-available.jpg';\n\nimport {\n  MovieCardWrapper,\n  MoviePoster,\n  MovieInfo,\n  MovieBox,\n  MovieOverview,\n  MovieOverviewText,\n  MovieNav,\n  MovieNavItem,\n  MovieNavLink,\n  BackLink,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const outletRef = useRef(null);\n\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    getMovieDetails(movieId)\n      .then(movieData => {\n        setMovie(movieData);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, [movieId]);\n\n  const scrollToSection = () => {\n    if (outletRef.current) {\n      setTimeout(() => {\n        outletRef.current.scrollIntoView({ behavior: 'smooth' });\n      }, 500);\n    }\n  };\n\n  if (isLoading) {\n    return <Loader />;\n  }\n\n  const { title, release_date, vote_average, genres, overview, poster_path } =\n    movie;\n\n  return (\n    <>\n      <BackLink to={backLinkHref}>\n        <HiArrowLeft size=\"24\" />\n        Go back\n      </BackLink>\n      <MovieCardWrapper>\n        <div>\n          <MoviePoster\n            src={poster_path || noPoster}\n            alt={poster_path ? title : 'Placeholder'}\n          />\n        </div>\n        <div>\n          <h2>\n            {title} ({release_date.slice(0, 4)})\n          </h2>\n          <div>\n            <MovieBox>\n              <MovieInfo>{release_date}</MovieInfo>\n              <MovieInfo>{genres.map(genre => genre.name + ' ')}</MovieInfo>\n              <MovieInfo>User score: {vote_average.toFixed(1)} </MovieInfo>\n            </MovieBox>\n\n            <MovieOverview>Overview</MovieOverview>\n            <MovieOverviewText>{overview}</MovieOverviewText>\n          </div>\n        </div>\n      </MovieCardWrapper>\n      <MovieNav ref={outletRef}>\n        <MovieNavItem>\n          <MovieNavLink\n            to=\"cast\"\n            state={{ from: backLinkHref }}\n            onClick={scrollToSection}\n          >\n            Cast\n          </MovieNavLink>\n        </MovieNavItem>\n        <MovieNavItem>\n          <MovieNavLink\n            to=\"reviews\"\n            state={{ from: backLinkHref }}\n            onClick={scrollToSection}\n          >\n            Reviews\n          </MovieNavLink>\n        </MovieNavItem>\n      </MovieNav>\n\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzNjZmMjc2MjcyMDY2NzE4Y2YyYjBhNzI4MjFlYmEwNyIsInN1YiI6IjY0YmFlZTFhNDM1MDExMDBjNzExMGNmYSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.MZ8vGlAMFv2BTCJshD8dcZDS5gvT7sILLLCriDcF-Uc';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst API_PATHS = {\n  trendingMovies: 'trending/movie/day',\n  searchMovie: 'search/movie',\n  movieDetails: 'movie',\n  movieCast: 'credits',\n  movieReviews: 'reviews',\n};\n\nexport const fetchData = async path => {\n  try {\n    const response = await axios.get(`${BASE_URL}` + path, {\n      headers: {\n        accept: 'application/json',\n        Authorization: 'Bearer ' + API_KEY,\n      },\n    });\n    if (response.status === 200) {\n      return response.data;\n    }\n  } catch (error) {\n    console.error('An error occurred while fetching data:', error);\n  }\n};\n\nexport const getTrendingMovies = async () => {\n  const movies = await fetchData(`${API_PATHS.trendingMovies}`);\n  return movies.results;\n};\n\nexport const getMoviesByQuery = async query => {\n  const movies = await fetchData(`${API_PATHS.searchMovie}?query=${query}`);\n  return movies.results;\n};\n\nexport const getMovieDetails = async movieId => {\n  const movie = await fetchData(`${API_PATHS.movieDetails}/${movieId}`);\n\n  if (movie.poster_path) {\n    movie.poster_path = `http://image.tmdb.org/t/p/w300${movie.poster_path}`;\n  }\n\n  return movie;\n};\n\nexport const getMovieCast = async movieId => {\n  const cast = await fetchData(\n    `${API_PATHS.movieDetails}/${movieId}/${API_PATHS.movieCast}`\n  );\n\n  return cast.cast.map(cast => {\n    if (cast.profile_path) {\n      cast.profile_path = `http://image.tmdb.org/t/p/w200${cast.profile_path}`;\n    }\n\n    return cast;\n  });\n};\n\nexport const getMovieReviews = async movieId => {\n  const reviews = await fetchData(\n    `${API_PATHS.movieDetails}/${movieId}/${API_PATHS.movieReviews}`\n  );\n\n  return reviews.results.map(review => {\n    if (review.author_details.avatar_path) {\n      review.author_details.avatar_path = `http://image.tmdb.org/t/p/w200${review.author_details.avatar_path}`;\n    }\n    return review;\n  });\n};\n"],"names":["StyledList","styled","_templateObject","_taggedTemplateLiteral","MovieList","_ref","movies","_jsx","children","map","movie","MovieItem","id","MoviePoster","MovieTitle","_templateObject2","MovieCard","_templateObject3","LinkToMovie","Link","_templateObject4","_useLocation","useLocation","pathname","search","title","poster_path","_jsxs","to","concat","state","from","src","alt","noPoster","MovieSlider","Slider","_objectSpread","dots","arrows","infinite","speed","slidesToScroll","variableWidth","MovieCardWrapper","MovieInfo","MovieBox","_templateObject5","MovieOverview","_templateObject6","MovieOverviewText","_templateObject7","MovieNav","_templateObject8","MovieNavItem","_templateObject9","MovieNavLink","NavLink","_templateObject10","BackLink","_templateObject11","_location$state$from","_location$state","movieId","useParams","_useState","useState","_useState2","_slicedToArray","setMovie","_useState3","_useState4","isLoading","setIsLoading","outletRef","useRef","backLinkHref","useEffect","getMovieDetails","then","movieData","finally","scrollToSection","current","setTimeout","scrollIntoView","behavior","Loader","release_date","vote_average","genres","overview","_Fragment","HiArrowLeft","size","slice","genre","name","toFixed","ref","onClick","Suspense","fallback","Outlet","axios","API_PATHS","fetchData","_asyncToGenerator","_regeneratorRuntime","_callee","path","response","_context","prev","next","headers","accept","Authorization","sent","status","abrupt","data","t0","console","error","stop","_x","apply","arguments","getTrendingMovies","_ref2","_callee2","_context2","results","getMoviesByQuery","_ref3","_callee3","query","_context3","_x2","_ref4","_callee4","_context4","_x3","getMovieCast","_ref5","_callee5","cast","_context5","profile_path","_x4","getMovieReviews","_ref6","_callee6","reviews","_context6","review","author_details","avatar_path","_x5"],"sourceRoot":""}