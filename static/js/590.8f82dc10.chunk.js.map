{"version":3,"file":"static/js/590.8f82dc10.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","components/MovieItem/MovieItem.styled.js","components/MovieItem/MovieItem.jsx","components/MovieSlider/MovieSlider.jsx","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx","services/api.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledList = styled.ul`\n  list-style-type: none;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  justify-content: center;\n`;\n","import { MovieItem } from '../index';\nimport { StyledList } from './MovieList.styled';\nimport PropTypes from 'prop-types';\n\nexport const MovieList = ({ movies }) => {\n  return (\n    <StyledList>\n      {movies.map(movie => (\n        <MovieItem key={movie.id} movie={movie} />\n      ))}\n    </StyledList>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }).isRequired\n  ),\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MoviePoster = styled.img`\n  border-radius: 4px;\n  width: 300px;\n  height: 400px;\n  object-fit: cover;\n`;\n\nexport const MovieTitle = styled.p`\n  color: darkblue;\n  margin: 10;\n  font-size: large;\n  font-weight: 700;\n  max-width: 300px;\n`;\n\nexport const MovieCard = styled.li`\n  display: flex;\n  margin: 10px 20px;\n`;\n\nexport const LinkToMovie = styled(Link)`\n  text-decoration: none;\n`;\n","import { useLocation } from 'react-router-dom';\nimport { MoviePoster, MovieCard, MovieTitle } from './MovieItem.styled';\nimport noPoster from 'images/no-poster-available.jpg';\nimport { LinkToMovie } from './MovieItem.styled';\nimport PropTypes from 'prop-types';\n\nexport const MovieItem = ({ movie }) => {\n  const { pathname, search } = useLocation();\n\n  const { title, poster_path, id } = movie;\n  return (\n    <MovieCard>\n      <LinkToMovie to={`/movies/${id}`} state={{ from: pathname + search }}>\n        {poster_path ? (\n          <MoviePoster\n            src={`http://image.tmdb.org/t/p/w200${poster_path}`}\n            alt={title}\n          />\n        ) : (\n          <MoviePoster src={noPoster} alt=\"Placeholder\" />\n        )}\n\n        <MovieTitle>{title}</MovieTitle>\n      </LinkToMovie>\n    </MovieCard>\n  );\n};\n\nMovieItem.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    poster_path: PropTypes.string,\n  }).isRequired,\n};\n","import Slider from 'react-slick';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport { MovieItem } from '../index';\nimport PropTypes from 'prop-types';\n\nexport const MovieSlider = ({ movies }) => {\n  const settings = {\n    dots: true,\n    arrows: false,\n    infinite: true,\n    speed: 500,\n    //slidesToShow: 8,\n    slidesToScroll: 4,\n    variableWidth: true,\n    // prevArrow: <button>Prev</button>,\n    // nextArrow: <button>Next</button>,\n  };\n\n  return (\n    <div>\n      <Slider {...settings}>\n        {movies.map(movie => (\n          <MovieItem movie={movie} key={movie.id} />\n        ))}\n      </Slider>\n    </div>\n  );\n};\n\nMovieSlider.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }).isRequired\n  ),\n};\n","import styled from 'styled-components';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 500px;\n  background-color: #fff;\n  border-radius: 4px;\n  overflow: hidden;\n  outline: 2px solid darkgreen;\n`;\n\nexport const SearchInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 22px;\n  border: none;\n  outline: none;\n  padding-left: 10px;\n  padding-right: 10px;\n\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const SearchButton = styled.button`\n  display: inline-block;\n  font: inherit;\n  font-size: 18px;\n  color: white;\n  width: 140px;\n  height: 48px;\n  border: 0;\n  background-color: darkgreen;\n  cursor: pointer;\n  outline: none;\n`;\n\nexport const SearchBar = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 24px 0;\n`;\n","import { useState, useEffect } from 'react';\nimport { MovieList, Loader } from 'components';\nimport { getMoviesByQuery } from 'services/api';\nimport { useSearchParams } from 'react-router-dom';\n\nimport {\n  SearchForm,\n  SearchInput,\n  SearchButton,\n  SearchBar,\n} from './Movies.styled';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query');\n\n  const onSubmit = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    const searchQuery = form.elements.query.value;\n    setSearchParams({ query: searchQuery });\n    form.reset();\n  };\n\n  useEffect(() => {\n    if (searchQuery) {\n      setIsLoading(true);\n      getMoviesByQuery(searchQuery)\n        .then(movies => {\n          setMovies(movies);\n        })\n        .finally(() => {\n          setIsLoading(false);\n        });\n    }\n  }, [searchQuery]);\n\n  if (isLoading) {\n    return <Loader />;\n  }\n\n  return (\n    <>\n      <SearchBar>\n        <SearchForm onSubmit={onSubmit}>\n          <SearchInput\n            name=\"query\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movies\"\n          />\n          <SearchButton>Search</SearchButton>\n        </SearchForm>\n      </SearchBar>\n      <MovieList movies={movies} />\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzNjZmMjc2MjcyMDY2NzE4Y2YyYjBhNzI4MjFlYmEwNyIsInN1YiI6IjY0YmFlZTFhNDM1MDExMDBjNzExMGNmYSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.MZ8vGlAMFv2BTCJshD8dcZDS5gvT7sILLLCriDcF-Uc';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst API_PATHS = {\n  trendingMovies: 'trending/movie/day',\n  searchMovie: 'search/movie',\n  movieDetails: 'movie',\n  movieCast: 'credits',\n  movieReviews: 'reviews',\n};\n\nexport const fetchData = async path => {\n  try {\n    const response = await axios.get(`${BASE_URL}` + path, {\n      headers: {\n        accept: 'application/json',\n        Authorization: 'Bearer ' + API_KEY,\n      },\n    });\n    if (response.status === 200) {\n      return response.data;\n    }\n  } catch (error) {\n    console.error('An error occurred while fetching data:', error);\n  }\n};\n\nexport const getTrendingMovies = async () => {\n  const movies = await fetchData(`${API_PATHS.trendingMovies}`);\n  return movies.results;\n};\n\nexport const getMoviesByQuery = async query => {\n  const movies = await fetchData(`${API_PATHS.searchMovie}?query=${query}`);\n  return movies.results;\n};\n\nexport const getMovieDetails = async movieId => {\n  const movie = await fetchData(`${API_PATHS.movieDetails}/${movieId}`);\n\n  if (movie.poster_path) {\n    movie.poster_path = `http://image.tmdb.org/t/p/w300${movie.poster_path}`;\n  }\n\n  return movie;\n};\n\nexport const getMovieCast = async movieId => {\n  const cast = await fetchData(\n    `${API_PATHS.movieDetails}/${movieId}/${API_PATHS.movieCast}`\n  );\n\n  return cast.cast.map(cast => {\n    if (cast.profile_path) {\n      cast.profile_path = `http://image.tmdb.org/t/p/w200${cast.profile_path}`;\n    }\n\n    return cast;\n  });\n};\n\nexport const getMovieReviews = async movieId => {\n  const reviews = await fetchData(\n    `${API_PATHS.movieDetails}/${movieId}/${API_PATHS.movieReviews}`\n  );\n\n  return reviews.results.map(review => {\n    if (review.author_details.avatar_path) {\n      review.author_details.avatar_path = `http://image.tmdb.org/t/p/w200${review.author_details.avatar_path}`;\n    }\n    return review;\n  });\n};\n"],"names":["StyledList","styled","_templateObject","_taggedTemplateLiteral","MovieList","_ref","movies","_jsx","children","map","movie","MovieItem","id","MoviePoster","MovieTitle","_templateObject2","MovieCard","_templateObject3","LinkToMovie","Link","_templateObject4","_useLocation","useLocation","pathname","search","title","poster_path","_jsxs","to","concat","state","from","src","alt","noPoster","MovieSlider","Slider","_objectSpread","dots","arrows","infinite","speed","slidesToScroll","variableWidth","SearchForm","SearchInput","SearchButton","SearchBar","_useState","useState","_useState2","_slicedToArray","setMovies","_useState3","_useState4","isLoading","setIsLoading","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","searchQuery","get","useEffect","getMoviesByQuery","then","finally","Loader","_Fragment","onSubmit","event","preventDefault","form","currentTarget","elements","query","value","reset","name","type","autoComplete","autoFocus","placeholder","axios","API_PATHS","fetchData","_asyncToGenerator","_regeneratorRuntime","_callee","path","response","_context","prev","next","headers","accept","Authorization","sent","status","abrupt","data","t0","console","error","stop","_x","apply","arguments","getTrendingMovies","_ref2","_callee2","_context2","results","_ref3","_callee3","_context3","_x2","getMovieDetails","_ref4","_callee4","movieId","_context4","_x3","getMovieCast","_ref5","_callee5","cast","_context5","profile_path","_x4","getMovieReviews","_ref6","_callee6","reviews","_context6","review","author_details","avatar_path","_x5"],"sourceRoot":""}